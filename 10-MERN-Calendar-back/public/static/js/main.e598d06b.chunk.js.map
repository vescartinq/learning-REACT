{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","REACT_APP_API_URL","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e598d06b.chunk.js","sourcesContent":["export const types = {\r\n  uiOpenModal: '[ui] Open modal',\r\n  uiCloseModal: '[ui] Close modal',\r\n\r\n  eventSetActive: '[event] Set Active',\r\n  eventLogout: '[event] Logout event',\r\n\r\n  evetStartAddNew: '[event] Start add new',\r\n  eventAddNew: '[event] Add new',\r\n  eventClearActiveEvent: '[event] Clear active event',\r\n  eventUpdated: '[event] Event updated',\r\n  eventDeleted: '[event] Event deleted',\r\n  eventLoaded: '[event] Events loaded',\r\n\r\n  authCheckingFinish: '[auth] Finish checking login state',\r\n  authStartLogin: '[auth] Start login',\r\n  authLogin: '[auth] Login',\r\n  authStartRegister: '[auth] Start Register',\r\n  authStartStartTokenRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] Logout',\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true,\r\n      };\r\n\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../types/types';\r\n// {\r\n//     id: 'askdjhaksdjas',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Victor'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload,\r\n      };\r\n\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      };\r\n\r\n    case types.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        activeEvent: null,\r\n      };\r\n\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((e) =>\r\n          e.id === action.payload.id ? action.payload : e\r\n        ),\r\n      };\r\n\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\r\n        activeEvent: null,\r\n      };\r\n\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload],\r\n      };\r\n\r\n    case types.eventLogout:\r\n      return {\r\n        ...initialState,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  checking: true,\r\n  // uid: null,\r\n  // name: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false,\r\n      };\r\n\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      };\r\n\r\n    case types.authLogout:\r\n      return {\r\n        checking: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url);\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n  const token = localStorage.getItem('token') || '';\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'x-token': token,\r\n      },\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\r\n      'auth/new',\r\n      { email, password, name },\r\n      'POST'\r\n    );\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  };\r\n};\r\n\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchConToken('auth/renew');\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(checkingFinish());\r\n    }\r\n  };\r\n};\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: '',\r\n    lPassword: '',\r\n  });\r\n\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: 'Noa',\r\n    rEmail: 'noa@gmail.com',\r\n    rPassword1: '123456',\r\n    rPassword2: '123456',\r\n  });\r\n\r\n  const { lEmail, lPassword } = formLoginValues;\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rPassword1 !== rPassword2) {\r\n      return Swal.fire(\r\n        'Error',\r\n        'Las contraseñas deben de ser iguales',\r\n        'error'\r\n      );\r\n    }\r\n    // console.log('?');\r\n    dispatch(startRegister(rEmail, rPassword1, rName));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword1\"\r\n                value={rPassword1}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPassword2\"\r\n                value={rPassword2}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">{name}</span>\r\n\r\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span> Salir</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","// Configuración calendario-> español\r\n// https://gist.github.com/Klerith/1658fc368898dd673fc5a9a01ccb12ff\r\nexport const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n  return events.map((e) => ({\r\n    ...e,\r\n    end: moment(e.end).toDate(),\r\n    start: moment(e.start).toDate(),\r\n  }));\r\n};\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { types } from '../types/types';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid, name } = getState().auth;\r\n\r\n    try {\r\n      const resp = await fetchConToken('events', event, 'POST');\r\n      const body = await resp.json();\r\n\r\n      console.log(body);\r\n\r\n      if (body.ok) {\r\n        event.id = body.evento.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name: name,\r\n        };\r\n        console.log(event);\r\n        dispatch(eventAddNew(event));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n  type: types.eventClearActiveEvent,\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        dispatch(eventUpdated(event));\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n  type: types.eventUpdated,\r\n  payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n    const { id } = getState().calendar.activeEvent;\r\n    try {\r\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        dispatch(eventDeleted());\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken('events');\r\n      const body = await resp.json();\r\n\r\n      const events = prepareEvents(body.eventos);\r\n      dispatch(eventLoaded(events));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n  type: types.eventLoaded,\r\n  payload: events,\r\n});\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout });\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventStartAddNew,\r\n  eventStartUpdate,\r\n} from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:00:00\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlus1.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n  const { modalOpen } = useSelector((state) => state.ui);\r\n  const { activeEvent } = useSelector((state) => state.calendar);\r\n  const dispatch = useDispatch();\r\n\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { notes, title, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent, setFormValues]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    // TODO: cerrar el modal\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent());\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e,\r\n    });\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e,\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire(\r\n        'Error',\r\n        'La fecha fin debe de ser mayor a la fecha de inicio',\r\n        'error'\r\n      );\r\n    }\r\n\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n\r\n    if (activeEvent) {\r\n      dispatch(eventStartUpdate(formValues));\r\n    } else {\r\n      dispatch(eventStartAddNew(formValues));\r\n    }\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            minDate={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${!titleValid && 'is-invalid'} `}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Información adicional\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    dispatch(eventStartDelete());\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n      <i className=\"fas fa-trash\"></i>\r\n      <span> Borrar evento </span>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport {\r\n  eventSetActive,\r\n  eventClearActiveEvent,\r\n  eventStartLoading,\r\n} from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { events, activeEvent } = useSelector((state) => state.calendar);\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n  const [lastView, setLastView] = useState(\r\n    localStorage.getItem('lastView') || 'month'\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading());\r\n  }, [dispatch]);\r\n\r\n  const onDoubleClick = (e) => {\r\n    // console.log(e);\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e));\r\n  };\r\n\r\n  const onViewChange = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e);\r\n  };\r\n\r\n  const onSelectSlot = (e) => {\r\n    // console.log(e)\r\n    dispatch(eventClearActiveEvent());\r\n  };\r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      display: 'block',\r\n      color: 'white',\r\n    };\r\n\r\n    return {\r\n      style,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onView={onViewChange}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n        view={lastView}\r\n        components={{\r\n          event: CalendarEvent,\r\n        }}\r\n      />\r\n\r\n      <AddNewFab />\r\n\r\n      {activeEvent && <DeleteEventFab />}\r\n\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n\r\n  if (checking) {\r\n    return <h5>Please Wait...</h5>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path=\"/login\"\r\n            component={LoginScreen}\r\n            isAuthenticated={!!uid} //doble negación lo convierte en booleano\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={CalendarScreen}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\n\r\nimport './styles.css';\r\n\r\nconsole.log(process.env);\r\n\r\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}